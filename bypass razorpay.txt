class CheckoutView(View):
    def get(self, request):
        user = request.user
        add = Customer.objects.filter(user=user)
        cart_items = Cart.objects.filter(user=user)
        famount = 0
        for p in cart_items:
            value = p.quantity * p.product.discounted_price
            famount += value
        totalamount = famount + 40 
        razoramount = int(totalamount * 100)  # Amount in paise
        client = razorpay.Client(auth=(settings.RAZOR_KEY_ID, settings.RAZOR_KEY_SECRET))
        data = {
            "amount": razoramount,
            "currency": "INR",
            "receipt": f"order_receipt_{user.id}"
        }
        payment_response = client.order.create(data=data)
        order_id = payment_response.get('id')
        order_status = payment_response.get('status')
        if order_status == 'created': 
            payment = Payment(
                user=user,
                amount=totalamount,
                razorpay_order_id=order_id,
                razorpay_payment_status=order_status,
                paid=False  # Indicating that the payment has not yet been completed
            )
            payment.save()
        return redirect(f'/paymentdone?order_id={order_id}&payment_id=test_payment_id&cust_id={user.id}')


def payment_done(request):
    order_id = request.GET.get('order_id')
    payment_id = request.GET.get('payment_id')  # This will be 'test_payment_id' in our case
    cust_id = request.GET.get('cust_id')
    user = request.user
    
    customer = Customer.objects.get(id=cust_id)
    payment = Payment.objects.get(razorpay_order_id=order_id)
    payment.paid = True  # Set this to True to simulate that payment was successful
    payment.razorpay_payment_id = payment_id
    payment.save()
    
    # Save order details
    cart = Cart.objects.filter(user=user)
    for c in cart:
        OrderPlaced(user=user, customer=customer, product=c.product, quantity=c.quantity, payment=payment).save()
        c.delete()

    return redirect("orders")


<form action="{% url 'payment_done' %}" method="get" id="myform"> 
    {% csrf_token %}
    {% for ad in add %}
        <!-- Your existing address selection code -->
    {% endfor %}
    <div class="form-check mb-3">
        <label for="totamount" class="form-label">Total Amount</label>
        <input type="number" class="form-control" name="totamount" value="{{ totalamount }}" readonly>
    </div>
    <div class="text-end">
        <button id="test-payment-button" type="submit" class="btn btn-warning mt-3 px-5 fw-bold">Proceed</button>
    </div>
    <input type="hidden" name="order_id" value="{{ order_id }}">
    <input type="hidden" name="payment_id" value="test_payment_id"> <!-- Mocked Payment ID -->
    <input type="hidden" name="cust_id" value="{{ request.user.id }}">
</form>


Comment the script


1. cd .\ecomm\   
2. python manage.py runserver